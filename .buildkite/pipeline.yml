steps:
  - label: ":mag: List directory contents"
    command: |
      echo "Current directory:"
      pwd
      echo "Directory contents:"
      ls -la
      echo "Contents of hello directory:"
      ls -la hello/

  - label: ":docker: Build and debug"
    plugins:
      - docker#v3.7.0:
          image: "golang:1.18.0"
          workdir: /go/src/app
          volumes:
            - .:/go/src/app
          command: [
              "/bin/sh",
              "-c",
              "
              echo 'Current directory (in Docker):' &&
              pwd &&
              echo 'Directory contents (in Docker):' &&
              ls -la &&
              echo 'Contents of hello directory:' &&
              ls -la hello/ &&
              echo 'Attempting to build:' &&
              cd hello &&
              go build -v &&
              echo 'Contents of hello directory after build:' &&
              ls -la &&
              echo 'Build complete'
              ",
            ]

  - label: ":arrow_up: Upload artifact"
    command: |
      echo "Current directory:"
      pwd
      echo "Directory contents:"
      ls -la
      echo "Contents of hello directory:"
      ls -la hello/
      echo "Searching for executable:"
      find . -type f -executable
      echo "Attempting to upload artifact:"
      EXECUTABLE=$(find . -type f -executable | grep hello)
      if [ -n "$EXECUTABLE" ]; then
        echo "Found executable: $EXECUTABLE"
        buildkite-agent artifact upload "$EXECUTABLE"
      else
        echo "No executable found"
        exit 1
      fi

  - block: ":name_input: Enter your name"
    prompt: "Please enter your name"
    fields:
      - text: "Name"
        key: "users-name"
        required: true

  - label: ":golang: Run the program"
    command: |
      echo "Searching for downloaded artifact:"
      find . -type f -name "*hello*"
      echo "Attempting to run the program:"
      EXECUTABLE=$(find . -type f -name "*hello*")
      if [ -n "$EXECUTABLE" ]; then
        chmod +x "$EXECUTABLE"
        "$EXECUTABLE" "$(buildkite-agent meta-data get users-name)"
      else
        echo "Executable not found"
        exit 1
      fi

  - wait

  - label: ":memo: Generate report"
    command: |
      echo "Program execution completed for user: $(buildkite-agent meta-data get users-name)" > report.txt
    artifact_paths:
      - "report.txt"
